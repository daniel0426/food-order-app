{"ast":null,"code":"var _jsxFileName = \"/Users/sadministrator/Desktop/react/food-order-app/src/components/Meals/availableMeals.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styles from './availableMeals.module.css';\nimport MealItem from './mealItem/mealItem';\nimport Card from '../UI/card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = props => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://food-order-app-59a7e-default-rtdb.firebaseio.com/meals.json');\n\n      if (!response.ok) {\n        throw new Error('Somehing went wrong');\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    try {\n      fetchMeals();\n    } catch (error) {\n      setIsLoading(false);\n      setHttpError(error);\n    }\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.mealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Meals are loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    meal: meal\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AvailableMeals, \"6pndJp/WWpMtmhSnoCH9k0tFnXc=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/sadministrator/Desktop/react/food-order-app/src/components/Meals/availableMeals.jsx"],"names":["React","useEffect","useState","styles","MealItem","Card","AvailableMeals","props","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","error","mealsLoading","mealsList","map","meal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;AAGA,MAAMC,cAAc,GAAEC,KAAK,IAAI;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAmBP,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,EAA1C;AAEAD,EAAAA,SAAS,CAAE,MAAK;AACZ,UAAMa,UAAU,GAAG,YAAW;AAC5B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qEAAD,CAA5B;;AAEA,UAAG,CAACD,QAAQ,CAACE,EAAb,EAAgB;AACd,cAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;AACD;;AACD,YAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;AAEA,YAAMC,WAAW,GAAG,EAApB;;AACA,WAAI,MAAMC,GAAV,IAAiBH,YAAjB,EAA8B;AAC5BE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEF,GADW;AAEfG,UAAAA,IAAI,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFT;AAGfC,UAAAA,WAAW,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHhB;AAIfC,UAAAA,KAAK,EAAGR,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AAJX,SAAjB;AAMD;;AACDlB,MAAAA,QAAQ,CAACY,WAAD,CAAR;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAnBD;;AAoBA,QAAI;AACDG,MAAAA,UAAU;AACZ,KAFD,CAEE,OAAOc,KAAP,EAAc;AACdjB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,YAAY,CAACe,KAAD,CAAZ;AACD;AACJ,GA3BQ,EA2BN,EA3BM,CAAT;;AA6BA,MAAGlB,SAAH,EAAc;AACZ,wBAAO;AAAS,MAAA,SAAS,EAAEP,MAAM,CAAC0B,YAA3B;AAAA,6BACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD;;AACD,QAAMC,SAAS,GAAGtB,KAAK,CAACuB,GAAN,CAAUC,IAAI,iBAChC,QAAC,QAAD;AAAU,IAAA,EAAE,EAAEA,IAAI,CAACR,EAAnB;AAAqC,IAAA,IAAI,EAAEQ;AAA3C,KAA4BA,IAAI,CAACR,EAAjC;AAAA;AAAA;AAAA;AAAA,UADkB,CAAlB;AAEA,sBACI;AAAS,IAAA,SAAS,EAAErB,MAAM,CAACK,KAA3B;AAAA,2BACA,QAAC,IAAD;AAAA,6BACI;AAAA,kBACGsB;AADH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAlDD;;GAAMxB,c;;KAAAA,c;AAoDN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styles from './availableMeals.module.css'\nimport MealItem from './mealItem/mealItem';\nimport Card from '../UI/card';\n\n\nconst AvailableMeals= props => {\n    const [meals, setMeals]= useState([])\n    const [isLoading, setIsLoading] = useState(true)\n    const [httpError, setHttpError] = useState();\n\n    useEffect( ()=> {\n        const fetchMeals = async ()=> {\n          const response = await fetch('https://food-order-app-59a7e-default-rtdb.firebaseio.com/meals.json')\n\n          if(!response.ok){\n            throw new Error('Somehing went wrong')\n          }\n          const responseData = await response.json();\n\n          const loadedMeals = [];\n          for(const key in responseData){\n            loadedMeals.push({\n              id: key,\n              name: responseData[key].name,\n              description: responseData[key].description,\n              price : responseData[key].price\n            })\n          }\n          setMeals(loadedMeals)\n          setIsLoading(false)\n        } \n        try {\n           fetchMeals()\n        } catch (error) {\n          setIsLoading(false)\n          setHttpError(error)\n        }\n    }, []) \n\n    if(isLoading) {\n      return <section className={styles.mealsLoading}>\n       <p>Meals are loading ...</p>\n      </section>\n    }\n    const mealsList = meals.map(meal => \n    <MealItem id={meal.id} key={meal.id} meal={meal}/>)\n    return (\n        <section className={styles.meals}>\n        <Card>\n            <ul >\n              {mealsList} \n            </ul>\n        </Card>\n        </section>\n    )\n}\n\nexport default AvailableMeals\n"]},"metadata":{},"sourceType":"module"}